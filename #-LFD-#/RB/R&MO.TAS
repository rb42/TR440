				--	R&MO				25.02.75	KUHLMEY EP34	--
				--									--
 
R&MO=	SEGM,
	STRUKT	(5),
	EINGG	(R&ANFANG),
R&ANFANG=	ASP	0/B		--BEZUGSPUNKT FUER UEBERWACHER--
				--VARIABLE FUER EIN-UND AUSGABE--
R&PUFFER=	CZONE	V,
	ABLAGE	R&PUFFER (V0),
R&INDZELLEN.=	ASP	256/G,
R&EPUFFER.=	ASP	80/G,
R&EPUFFERPOS.=	ASP	1,
R&APUFFERPOS.=	ASP	1,
	EINGG	(R&APUFFERPOS),
R&VORSCHUB.=	ASP	2/G,
R&APUFFER.=	ASP	116/G,
	EINGG	(R&APUFFER),
R&APUFFERVERLAENGERUNG=	ASP	26/G,
	AEND	(V0),
R&APUFFERINI.=	TBC	APUFFERINIRUECK,
APUFFERINIRUECK=	ASP	1,
	BU	('0000AF0000AF'/3),	-- BU	('(0,0,'' '',0,0,'' '')'), --
	XBA	R&VORSCHUB,
	S	SCHLEIFE+1,
SCHLEIFE=	HBA	R&APUFFER+118,
	MAB	CU	2,
	VBA	R&APUFFER+118,
	SXK	SCHLEIFE,
	BU	('150000000000'/3),
	CU	R&VORSCHUB,
	XBA	R&APUFFER,
	TBC	R&APUFFERPOS,
	TCB	APUFFERINIRUECK,
	MAB	S	0,

				---FEHLERMELDUNGEN UND ENDE--
FEHLERO2.=	SFB	FEHLERM, N(''ZU GROSSE ZAHL'', 0/2),
FEHLERO.=	SFB	FEHLERMT,
	NULL	(''ZU GROSSE ZAHL''/3, 0/2),
FEHLERA.=	BCL	MERKL,
FEHLERA1.=	SFB	FEHLER,
	NULL	(''UNZULAESSIGES ARGUMENT''/3, 0/2),
FEHLERD.=	SFB	FEHLERMT,
	NULL	(''FEHLERHAFTE EINGABEDATEN''/3, 0/2),
FEHLERZ.=	SFB	FEHLERMT,
	NULL	(''UNZULAESSIGES ZEICHEN''/3, 0/2),

	EINGG	(R&KEINEDATEN),
R&KEINEDATEN.=	SFB	FEHLER,
	NULL	(''R&LIES FINDET WEDER DATEN NOCH SPRUNGADRESSE''/3, 0/2),
R&FEHLER.=	MU	XBA	0,
	S	FEHLER,
	EINGG	(R&FEHLER),
FEHLERMT=	MAB	TCB	0,
	TBC	TEXTADR,
	BCL	MERKL,
	MU	TCB	1,
	MU	SXN	1,
	S	4R,
FEHLERM=	BCL	MERKL,
FEHLERORT=	ASP	1,
FEHLER.=	MAB	TCB	0,
	TBC	TEXTADR,
TEXTADR=	ASP	1,
	MU	XBA	-1,
	TBC	FEHLERORT,
	R	MCFU	U,
	ZU	'FF',
	SFB	R&DRUCK		--PUFFER RAEUMEN--
Z20=	ASP	1		--ZAEHLER 0 BIS 18 --
	XBA	0		--ZAEHLER ANFANGS--
	TBC	Z20,
NR1=	TCB	TEXTADR,
	HBC	Z20,
	MAB	BU	0,
	STN	10	3A	--BEI TK 2 ENDE--
	TCB	Z20		--AUS A NACH PUFFER--
	HBA	R&APUFFER,
	MAB	CU	0,
	TCB	Z20		--IST	Z20 GRGL 18 --
	VBA	18,
	SXGG	ENDE1		--JA ENDE1 --
	HBA	20		--NEIN Z20 = Z20 + 2 --
	TBC	Z20,
	S	NR1		--WEITERER FEHLERTEXT--
ENDE1=	BZ	(''FEHLERORT:  ''),
	CZ	R&APUFFER+32,
	B2V	FEHLERORT,
	XBA	R&APUFFER+36,
	TBC	R&APUFFERPOS,
	SU	R&ATET,
	NULL	6,
	SU	R&DRUCKEPROT,
	TCB	FEHLERORT,
	HBA	1,
	LR	3A,
	S	S&CC+10,

R&END.=	S	S&CC+7,
	EINGG	(R&END),

R&SSRFEHLER.=	S	S&SRF,
	EINGG	(R&SSRFEHLER),

				--PUFFER AUSDRUCKEN--
	EINGG	(R&DRUCKE),
R&DRUCKE.=	TCB	GERAET6,
	SXI	R&DRUCKEPROT,
	BCL	MERKL,
	LR	3A,
	CU	R&APUFFER+116,
	XBA	DRUCKVERSORG,
	SSR	253	10,
	SFB	R&APUFFERINI,
	BCL	MERKL,
	MU	S	0,

R&DRUCKEPROT=	BCL	MERKL,
	B	(1),
	BH	(V612=R&VORSCHUB/AG1V, 29/1VUH),
	SFB	S&CC+4,
	SFB	R&APUFFERINI,
	BCL	MERKL,
	MU	S	0,

R&DRUCK.=	TBC	ZURUECK68,
	EINGG	(R&DRUCK),
ZURUECK68=	ASP	1,
	BH	('0000AF0000AF'/3),
	XBA	R&VORSCHUB+118,
	MAB	B	-2,
	SI	-1R,
	VBA	R&VORSCHUB,
	HBA	2,
	SHB	R	1,
	TBC	V612+1,
	SU	R&DRUCKE,
	XBA	59,
	TBC	V612+1,
	TCB	ZURUECK68,
	MABI	S	0,

R&DUMP=	MU	TCB	0,
	EINGG	(R&DUMP),
	SHB	R	16,
	SXN	DUMP1,
	MU	TCB	0,
	TBC	S&C3+13,
	BA	2,
	BAR	4,
	SFB	S&CC+4,
	MU	S	1,
DUMP1=	LR	3A,
	SFB	S&CC+2,
	MU	S	1,

R&DRUCKELIES=	MU	S	0,
	EINGG	(R&DRUCKELIES),

R&BINAERDUMP.=	TBC	ZURUECK,
	EINGG	(R&BINAERDUMP),
ZURUECK=	ASP	1,
	TBC	ZURUECK,
	R	TCB	A,
	SSR	6	0,
	TCB	ZURUECK,
	MABI	S	0,

				--SPEICHER ZUM RETTEN VON REGISTERN--
IZONE=	ZONE	I,
	ABLAGE	IZONE	(V0),
INDEXZ.=	ASP	4		--FUER R&EOKT,R&ETET,R&EGANZ--
	AEND	(V0),
INDEXB.=	INDEXZ/AVG3, 254/VHU3,
MERKL.=	ASP	1,

				---INITIALISIERUNG--
				--START-XBAASIS-ALA-UNTPR-VORBES-BEFEHLE--
	XBASIS	R&INDZELLEN,
	VORBES	(3,'FFFFFFFFFFFF'),
	UNTPR	247,
	ALARM	ALARM,
	EXTERN	S&SRF	(S&SRF,S&SRFR),
ALARM=	XBA	(S&SRF/A2KG, 0/2H),
	SSR	0	12,
	START	START,
	EXTERN	S&CC,
S&CL=	CZONE	V,
	ABLAGE	S&CL	(V0),
	EINGG	(R&C1),
R&C1.=	ASP	0/GV,
S&C1.=	ASP	512/GV,
S&C2=	ASP	26/G,
S&C3=	ASP	16/G,
S&C4=	ASP	100/G,
S&CE=	ASP	2/G,
S&CT=	ASP	4/G,
	AEND	(V0),

START=	LR	3A,
	SFB	S&CC+1,
	B2	(R&DRUCK/A),
	SFB	S&CC+3		--ABSCHLUSS-PROZEDUR--
	B3	S&C1+1,
	BAR	100,
	SN	NACHLIES 	--KEIN STARTE-STARTSATZ--
	TCB	S&C1+6		-- EVTL. UEBWS SPEICHERN --
	SHB	R	16,
	SXN	3R,
	TCB	('03001E'/H),
	TBC	S&C1+6,
	XBA	1		--DEN VOLLSTAENDIGEN DUMP DER ALARMINFORMATION VORBEREITEN--
	TBC	S&CE,

				--DATEIANGABEN IM STARTSATZ--
GERAET5=	0/VH,
GERAET6.=	0/HV,
	TCB	S&C1+7,
	SXI	KEINEDATEIANGEGEBEN,
	SHB	L	8,
	SHB	R	8,
	HBA	S&C1,
	MAB	B2V	0	--ANZAHL DATEINAMEN--
	TBC	ADRPAR1,
ADRPAR1=	ASP	1,
	C	DATEIANZAHL,
DATEIANZAHL=	0/V,
DATEINRPRUEF=	BA	1,
	SBC	DATEIANZAHL,
	RT	AD,
	SK0	AUSWERTUNG,
	TCB	ADRPAR1,
	HBA	1,
	TBC	ADRPAR1,
	MAB	TCB	0,
	SHB	L	8,
	SHB	R	8,
	HBA	S&C1+1,
	MAB	B3	0	--GGERNR--
	RT	AH,
	B2V	S&C4+98,
	SI	QUELLDATEI,
	B2V	S&C4+99,
	SI	AUSGABEDATEI,
	S	DATEINRPRUEF,
QUELLDATEI=	TBC	GERAET5,
	S	DATEINRPRUEF,
AUSGABEDATEI=	TBC	GERAET6,
	S	DATEINRPRUEF,
AUSWERTUNG=	TCB	GERAET5,
	SXI	KEINEDATEI5,
	TCB	S&C1+10,
	SXI	3R,
	SU	R&FEHLER,
	NULL	(''DATEN AUS DATEI ODER STRING NEHMEN?''/3, 0/2),
	XBA	'FFFF',
	TBC	S&C1+10		--DATEN (IN DATEI) VORHANDEN--
				--DATEINAME AN S&GZF GEBEN--
	TCB	GERAET5,
	MAB	TCB	1,
	SHB	L	12,
	SHB	R	12,
	HBA	S&C1,
	MAB	BU	0,
	CU	VERSORGBL+8 	--DBN--
	TCB	GERAET5,
	HBA	2,
	MAB	TCB	0,
	SHB	L	8,
	SHB	R	20,
	TBC	VERSORGBL+11 	--LNGDTB--
	TCB	GERAET5,
	HBA	2,
	MAB	TCB	0,
	SHB	L	12,
	SHB	R	12,
	HBA	S&C1,
	TBC	VERSORGBL+10 	--AADTB--
	XBA	0,
	TBC	VERSORGBL+5 	--SRB=0--
	TCB	('010206'/H),
	TBC	VERSORGBL+1 	--ABL--
				--DATEINAME AN AUSGABEROUTINE GEBEN--
KEINEDATEI5=	TCB	GERAET6,
	SXI	KEINEDATEI6,
	MAB	TCB	1,
	SHB	L	12,
	SHB	R	12,
	HBA	S&C1,
	MAB	BU	0,
	CU	DRUCKVERSORG+2 	--DBN--
	TCB	GERAET6,
	HBA	2,
	MAB	TCB	0,
	SHB	L	8,
	SHB	R	20,
	TBC	DRUCKVERSORG+5 	--LNGDTB--
	TCB	GERAET6,
	HBA	2,
	MAB	TCB	0,
	SHB	L	12,
	SHB	R	12,
	HBA	S&C1,
	TBC	DRUCKVERSORG+5 	--AADTB--

DRUCKVERSORG=	S&SRF/AGV, 0/HV,
	0/V			--DBN--
	0/HV			--AADTB--
	0/HV			--LNGDTB--
	0/1HV,
	6/HV,
	R&VORSCHUB/3AV,, 59/VH	--PUFFER--
	1/V,
	0/V, 0/V,

	XBA	DRUCKVERSORG,
	SSR	253	9	--BEARBEITUNG EROEFFNEN--
	XBA	1,
	TBC	DRUCKVERSORG+7,
	XBA	DRUCKVERSORG,
	SSR	253	11	--SATZPOSITION--
KEINEDATEI6=	TCB	GERAET5,
	SXN	LIES,
KEINEDATEIANGEGEBEN=	ASP	0/B,
				--ANFANGSAUFRUF ZUM LESEN DER DATEN GEMAESS STATUS IV.9.2.1.		25.1 .. 25.5 --

VERSORGBL=	S&SMFEHL/AG2V,
	'FFFFFF'/UH2V 		--BEI PT=6 '010103'	BEI DATEI '010206'	BEI PT=7 '010007' --
	0/3V, 0/G1HV,
	'FFFFFF'/UHV 		--BEI DATEI 0, BEI PT=76 ABS.OKTADR DES 1.ZEI, BEI PT=7 '00004' --
	R&EPUFFER/AG2V, 80/UH2V,
	'FFFFFFFFFFFF'/2V 		--BEI DATEI DBN, BEI PT=7 GEBIETSNAME AUS STARTSATZ--
	'FFFFFFFFFFFF'/2V 		--BEI DATEI AADTB,LNGDTB, BEI PT=7 OKTADR AUS STARTSATZ--
	''R&&P4S''/2V,
	R&&P4S/AG2V, 0/UH2V,
PT=	ASP	1/V		--PT=6 ODER 7--
	TCB	S&C1+10		--STARTSATZ-PARAMETER 8 UNTERSUCHEN--
	SXI	NACHLIES 	--KEINE BENUTZERDATEN VORHANDEN--
	SHB	R	16,
	TBC	PT,
	VBA	6,
	SXN	FALLPT7		--FALL PT=7,DATEN IN GEBIET--
	TCB	('010103'/H) 	--FALL PT=6,DATEN IN STARTSATZ--
	TBC	VERSORGBL+1,
	TCB	S&C1+10,
	SHB	L	8,
	SHB	R	8,
	HBA	S&C1,
	TBC	VERSORGBL+5,
	S	LIES,
FALLPT7=	VBA	1,
	SXI	2R,
	KB	0		--UNERWARTETER FALL--
	TCB	('010007'/H),
	TBC	VERSORGBL+1,
	TCB	('000004'/H),
	TBC	VERSORGBL+5,
	TCB	S&C1+10,
	SHB	L	8,
	SHB	R	8,
	HBA	S&C1,
	MAB	BZ	0,
	CZ	VERSORGBL+8,
R&ZONE2=	FZONE	D,
	ABLAGE	R&ZONE2	(D0),
R&&P4S=	DSP	1K/D,
	AEND	(D0),
	XBA	(S&SRF/AG2,0/UH2, 0/2, 0/2, 0/GH2, '800001'/UH2, 0/2, 0/2, R&&P4S/AG2, '3FF000'/UH2),
	SSR	3	0,
	C	VERSORGBL+12,
LIES=	B2	(R&LIESE/A),
	NULL	1,

	EXTERN	S&SMFEHL,
	BA	VERSORGBL,
	EXTERN	S&GZF	(S&GZF,S&GZFA),
	SFB	S&GZFA,
NACHLIES=	ASP	0/B,
				--ANFANGSBELEGUNG FUER AUSGABEPUFFER USW.--
	SFB	R&APUFFERINI,
				--SPRUNG AUF BENUTZER-PROGRAMM--
	S	R&RAHMEN0,

R&RAHMEN=	CZONE	B,
	ABLAGE	R&RAHMEN (B0),
R&RAHMEN0.=	ASP	1/B,
	AEND	(B0),

				--LESEN EINER LOCHKARTE--
	EINGG	(R&LIES),
R&LIES.=	TCB	S&C1+10,
	SXI	2R		--KEINE BENUTZERDATEN VORHANDEN--
	SFB	S&GZF		--NORMALAUFRUF S&GZF--
R&LIESE.=	MU	S	0,
	XBA	R&EPUFFER 	--R&EPUFFERPOS ANFANGS--
	TBC	R&EPUFFERPOS,
	MU	S	1,

R&EOKT.=	SEGM,
	EINGG	(R&EOKT),
	INDEX	0	(X0),
	LR	3Q,
	MU	TCB	0	--VERSORGUNGSWORT NACH B--
	BCI	INDEXB,
	XCN	X0,
	SXKG	FEHLER1		--ARGUMENT ZU KLEIN--
	VBA	6,
	SXG	FEHLER1		--ARGUMENT ZU GROSS--
KON1=	SZX	+2	X0,
	S	END,
	TCB	R&EPUFFERPOS,
	HBA	1,
	TBC	R&EPUFFERPOS,
	VBA	1,
	MAB	B2	0	--NACHSTE OKTADE--
	SH	AK	8,
	SH	ZLK	8	--UMSPEICHERN DER OKTADE NACH A--
	S	KON1,
END=	RT	AQ		--OKTADENGOLGE NACH A--
	BCI	INDEXB,
	MU	TCB	0,
	SHB	L	3,
	HBA	'9200'		--AKU--
	MAB	SH	0,
	MU	S	1,
FEHLER1=	BCI	INDEXB,
	S	FEHLERA1,

R&ETET.=	SEGM,
	EINGG	(R&ETET),
	INDEX	0	(X0),
	LR	2Q,
	BCL	MERKL		--MERKLICHT RESERVIEREN--
	LZL	0	1,
	MU	TCB	0,
	BCI	INDEXB,
	XCN	X0,
	SXKG	FEHLER1		--ARGUMENT ZU KLEIN--
	VBA	12,
	SXG	FEHLER1		--ARGUMENT ZU GROSS--
KON1=	SZX	+2	X0,
	S	END,
	TCB	R&EPUFFERPOS,
	HBA	1,
	TBC	R&EPUFFERPOS,
	VBA	1,
	MAB	B2	0,
	C2	ZSP,
	TCB	ZSP,
	VBA	175,
	SL	+2	1	--FUEHRENDER SPACE--
	SXI	KON1,
	SXKG	FEHLER2		--UNZULAESSIGES ZEICHEN--
	VBA	11,
	SXKG	SHIFT,
	VBA	6,
	SXK	FEHLER2		--SPRUNG WENN NICHT BUCHSTABE--
	VBA	6,
	SXGG	FEHLER2		--NICHT ZULAESSIGER BUCHSTABE--
	AA	10,
SHIFT=	SH	AK	4,
	LZL	1	0	--MERKLICHT SETZEN--
	SH	ZKL	4,
	S	KON1,
END=	RT	AQ,
	LZL	0	1,
	BCL	MERKL		--MERKLICHTER BRINGEN--
	BCI	INDEXB,
	MU	S	2,
ZSP=	0/HV,
FEHLER1=	BCI	INDEXB,
	S	FEHLERA,
FEHLER2=	BCI	INDEXB,
	S	FEHLERZ,

R&EGANZ.=	SEGM,
	EINGG	(R&EGANZ),
	INDEX	0	(X0,X2),
	LR	1Q,
	BCL	MERKL,		--MERKLICHT RESERVIEREN--
	LZL	0	12,
	MU	TCB	0,
	BCI	INDEXB,
	XCN	X0,
	SXKG	FEHLER1		--ARGUMENT ZU KLEIN--
	VBA	80,
	SXG	FEHLER1		--ARGUMENT ZU GROSS--
	ZX	-13	X2,
KON1=	SZX	+2	X0,
	S	END,
	TCB	R&EPUFFERPOS,
	HBA	1,
	TBC	R&EPUFFERPOS,
	VBA	1,
	MAB	B2	0,
	C2	ZSP,
	TCB	ZSP,
	VBA	175,
	SL	+2	1,
	S	KON1		--FUEHRENDER SPACE--
	HBA	30,
	SL	+2	2,
	SXI	MINUS		--NEGATIVES VORZEICHEN--
	VBA	30,
	SXN	3R,
	B	('0000000000B0'/3),
	XBA	1,
	VBA	1,
	SXK	FEHLER2		--UNZULAESSIGES ZEICHEN--
	VBA	10,
	SXGG	FEHLER2		--UNZULAESSIGES ZEICHEN--
	SZX	+2	X2,
	S	FEHLER3,
	LZL	1	0,
	SH	AK	4,
	SH	ZKL	4	--OKTADE ABLEGEN--
	S	KON1,
MINUS=	LZL	2	0,
	S	KON1,
END=	SL	+2	1,
	S	FEHLER2,
	KDFR	13,
	SLN	+2	2,
	IR	A,
	BCL	MERKL		--MERKLICHTER BRINGEN--
	BCI	INDEXB,
	MU	S	2,
ZSP=	0/HV,
FEHLER1=	BCI	INDEXB,
	S	FEHLERA,
FEHLER2=	BCI	INDEXB,
	S	FEHLERZ,
FEHLER3=	BCI	INDEXB,
	S	FEHLERO,

R&EBRUCH.=	SEGM,
	EINGG	(R&EBRUCH),
				-- R&EBRUCH: PROC(PARAM), DCL (PARAM,ANFPOS,ENDPOS,I) FIXED BIN(7),	--
				--	PROOKTS FIXED BIN(22), MINUS BIT(1) DEF SMERKL(1)	--
ANFPOS=	ASP	1,
ENDPOS=	ASP	1,
I=	ASP	1,
PROOKTS=	0/1GV,
	BCL	MERKL,
	LR	1A,
	LZL	0	1,
				-- ANFPOS=R&EPUFFERPOS --
	TCB	R&EPUFFERPOS,
	TBC	ANFPOS,
				-- IF PARAM <= 0 THEN GOTO FEHLERA --
	MU	TCB	0,
	SXKG	FEHLERA,
				-- IF PARAM > 80 THEN GOTO FEHLERA --
	VBA	80,
	SXG	FEHLERA,
				--R&EPUFFERPOS,ENDPOS = R&EPUFFERPOS + PARAM --
	HBA	80,
	HBC	R&EPUFFERPOS,
	TBC	R&EPUFFERPOS,
	TBC	ENDPOS,
				-- /*PUNKT SUCHEN*/ DO I= ANFPOS TO ENDPOS-1	--
	TCB	ANFPOS,
	S	2R,
DO1=	HBA	1,
	TBC	I,
	VBC	ENDPOS,
	SXGG	AFTERDO1,
				-- IF OKTADE(I)=' 'THEN GOTO REPEAT --
	TCB	I,
	MAB	TCB	0,
	VBA	'00AF',
	SXI	REPEAT,
				-- IF OKTADE(I)='-' THEN DO; MINUS='1'B; GOTO REPEAT; END --
	TCB	I,
	MAB	TCB	0,
	VBA	'91',
	SXN	AFTERTHEN1,
	LZL	1	0,
	S	REPEAT,
AFTERTHEN1=	ASP	0/B,

				-- IF OKTADE(I)='.' THEN GOTO PUNKTGEFUNDEN--
	TCB	I,
	MAB	TCB	0,
	VBA	'69',
	SXI	PUNKTGEFUNDEN,
				-- REPEAT:END; GOTO FEHLERD; --
REPEAT=	TCB	I,
	S	DO1,
AFTERDO1=	S	FEHLERD,
				-- PUNKTGEFUNDEN: IF ENDPOS-I > 14 THEN GOTO FEHLERD; --
PUNKTGEFUNDEN=	TCB	ENDPOS,
	VBC	I,
	VBA	14,
	SXG	FEHLERD,
				-- ANFPOS=I+1; PROOKTS=0; --
	TCB	I,
	HBA	1,
	TBC	ANFPOS,
	LC	PROOKTS,
				-- DO I = ENDPOS-1 BY -1 TO ANFPOS; --
	TCB	ENDPOS,
	VBA	1,
	S	2R,
DO2=	VBA	1,
	TBC	I,
	VBC	ANFPOS,
	SXK	AFTERDO2,
	HBC	ANFPOS,
				-- ID OKTADE(I)<176)|(OKTADE(I)>185)THEN GOTO FEHLERZ; --
	TCB	I,
	MAB	TCB	0,
	VBA	176,
	SXK	FEHLERZ,
	TCB	I,
	MAB	TCB	0,
	VBA	185,
	SXG	FEHLERZ,
				-- PROOKTS=(PROOKTS +OKTADE(I)-176) ) * 0.1 --
	TCB	I,
	MAB	B2V	0,
	SBA	176,
	SH	AK	6,
	A	PROOKTS,
	ML	('066666666667'/1),
	C	PROOKTS,
				-- END; --
	TCB	I,
	S	DO2,
AFTERDO2=	ASP	0/B,
	SH	ZLR	4,
				-- IF MINUS THEN PROOKTS=-PROOKTS --
	R	BB	A,
	SLN	2	1,
	R	BN	A,
				-- END; --
	BCL	MERKL,
	MU	S	2,



R&EGLEIT.=	SEGM,
	EINGG	(R&EGLEIT),
				-- R&EGLEIT: PROC(PARAM); DCL ENPOS FIXED BIN(7),(VERSORGW4,VERSORGW5) --
				-- (12)BIT(4);MAMINUS BIT(1) DEF $MERKL(1),EXMINUS BIT(1) DEF $MERKL(2); --
				-- DCL (MAVON,MABBIS,EXVON)FIXED BIN(7);CASE LABEL,I,R;			--

ENDPOS=	ASP	1,
I=	ASP	1,
RI=	ASP	1,
VERSORGBL=	0/1V, 3/1V, 11/1V,
VERSORGW4=	0/3V,
VERSORGW5=	0/3V,
MAVON=	ASP	1,
MABBIS=	ASP	1,
EXVON=	ASP	1,
CASE=	ASP	1,
	BCL	MERKL,
				-- MAMINUS,EXMINUS = '1'B --
	LZL	0	12,
				-- IF PARAM <= 0 THEN GOTO FEHLERA; --
	MU	TCB	0,
	SXKG	FEHLERA,
				-- IF PARAM > 80 THEN GOTO FEHLERA; --
	VBA	80,
	SXG	FEHLERA,
				-- ENDPOS = R&EPUFFRERPOS + PARAM - 1 ;--
	HBA	79,
	HBC	R&EPUFFERPOS,
	TBC	ENDPOS,
				-- VERSORGW4,VERSORGW5 = 0 ; --
	LC	VERSORGW4,
	LC	VERSORGW5,
				-- CASE = CASE1 ; --
	TCB	(CASE1/A),
	TBC	CASE,
				-- DO R&EPUFFERPOS = R&EPUFFERPOS TO ENDPOS ; --
	TCB	R&EPUFFERPOS,
	S	2R,
DO1=	HBA	1,
	TBC	R&EPUFFERPOS,
	VBC	ENDPOS,
	SXG	AFTERDO1,
				-- R=OKTADE(R&EPUFFERPOS) ; --
	TCB	R&EPUFFERPOS,
	MAB	TCB	0,
	TBC	RI,
				-- GOTO CASE; --
	TCB	CASE,
	MAB	S	0,
				-- CASE1: IF OKTADE(R&EPUFFERPOS)='-' THEN DO; --
				-- MAMINUS='1'B; CASE=CASE2; GOTO REPEAT; END; --
CASE1=	TCB	RI,
	VBA	'0091',
	SXN	AFTERTHEN1,
	LZL	1	0,
	TCB	(CASE2/A),
	TBC	CASE,
	S	REPEAT,
AFTERTHEN1=	ASP	0/B,
				-- CASE1A: IF OKTADE(R&EPUFFERPOS)=' ' THEN GOTO REPEAT ; --
CASE1A=	TCB	RI,
	VBA	'00AF',
	SXI	REPEAT,
				-- IF OKTADE(R&EPUFFERPOS) = '.' THEN DO; MAVON=R&EPUFFERPOS+1;CASE=CASE3; --
				-- GOTO REPEAT ; END; --
	TCB	RI,
	VBA	'00A9',
	SXN	AFTERTHEN2,
	TCB	R&EPUFFERPOS,
	HBA	1,
	TBC	MAVON,
	TCB	(CASE3/A),
	TBC	CASE,
	S	REPEAT,
AFTERTHEN2=	ASP	0/B,
				-- GOTO FEHLERD ; --
	S	FEHLERD,
				-- CASE2: GOTO CASE1A ; --
CASE2=	S	CASE1A,
				-- CASE3: IF OKTADE(R&EPUFFERPOS) = ZIFFER THEN DO; CASE=CASE4; --
				-- GOTO REPEAT; END ; GOTO FEHLERD; --
CASE3=	TCB	RI,
	VBA	176,
	SXK	FEHLERZ,
	TCB	RI,
	VBA	185,
	SXG	FEHLERZ,
	TCB	(CASE4/A),
	TBC	CASE,
	S	REPEAT,
				-- CASE4: IF OKTADE(R&EPUFFERPOS)=' ' THEN DO; MABBIS=R&EPUFFERPOS-1; --
				-- 	CASE=CASE5; GOTO REPEAT; END ; --
CASE4=	TCB	RI,
	VBA	'00AF',
	SXN	AFTERTHEN3,
	TCB	R&EPUFFERPOS,
	VBA	1,
	TBC	MABBIS,
	TCB	(CASE5/A),
	TBC	CASE,
	S	REPEAT,
AFTERTHEN3=	ASP	0/B,
				-- IF OKTADE(R&EPUFFERPOS)='E' THEN DO; MABBIS=R&EPUFFERPOS-1 ; --
				-- CASE=CASE6; GOTO REPEAT; END ; --
	TCB	RI,
	VBA	'00C4',
	SXN	AFTERTHEN4,
	TCB	R&EPUFFERPOS,
	VBA	1,
	TBC	MABBIS,
	TCB	(CASE6/A),
	TBC	CASE,
	S	REPEAT,
AFTERTHEN4=	ASP	0/B,
				-- IF OKTADE(R&EPUFFERPOS)=ZIFFER THEN GOTO REPEAT; GOTO FEHLERZ; --
	TCB	RI,
	VBA	176,
	SXK	FEHLERZ,
	TCB	RI,
	VBA	185,
	SXG	FEHLERZ,
	S	REPEAT,
				-- CASES5: IF OKTADE(R&EPUFFERPOS)=' ' THEN GOTO REPEAT; --
CASE5=	TCB	RI,
	VBA	'00AF',
	SXI	REPEAT,
				-- IF OKTADE(R&EPUFFERPOS)='E' THEN GOTO REPEAT ; --
				-- GOTO FEHLERD ; --
	TCB	RI,
	VBA	'00C4',
	SXN	FEHLERD,
	TCB	(CASE6/A),
	TBC	CASE,
	S	REPEAT,
				-- CASE6: IF OKTADE(R&EPUFFERPOS)='-' THEN DO; EXMIUS='1'B; CASE=CASE7; --
				-- GOTO REPEAT; END ; --
CASE6=	TCB	RI,
	VBA	'0091',
	SXN	AFTERTHEN5,
	LZL	2	0,
	TCB	(CASE7/A),
	TBC	CASE,
	S	REPEAT,
AFTERTHEN5=	ASP	0/B,
				-- CASE7: IF OKTADE(R&EPUFFERPOS) = ' ' THEN GOTO REPEAT ; --
CASE7=	TCB	RI,
	VBA	'00AF',
	SXI	REPEAT,
				-- IF OKTADE(R&EPUFFERPOS)=ZIFFER THEN DO; EXVON=R&EPUFFERPOS; --
				-- CASE=CASE8; GOTO REPEAT, END; GOTO FEHLERZ; --
	TCB	RI,
	VBA	176,
	SXK	FEHLERZ,
	TCB	RI,
	VBA	185,
	SXG	FEHLERZ,
	TCB	R&EPUFFERPOS,
	TBC	EXVON,
	TCB	(CASE8/A),
	TBC	CASE,
	S	REPEAT,
CASE8=	TCB	RI,
	VBA	176,
	SXK	FEHLERZ,
	TCB	RI,
	VBA	185,
	SXG	FEHLERZ,
				-- REPEAT: END; --
REPEAT=	TCB	R&EPUFFERPOS,
	S	DO1,
AFTERDO1=	ASP	0/B,
				-- IF ENDPOS-EXVON > 2 THEN GOTO FEHLERD ; --
	TCB	ENDPOS,
	VBC	EXVON,
	VBA	2,
	SXG	FEHLERD,
				-- REGISTERAQ=0; --
	LR	3AQ,
				-- IF MABBIS-MAVON>11 THEN MABBIS=MAVON+10 ; --
	TCB	MABBIS,
	VBC	MAVON,
	VBA	11,
	SXKG	AFTERTHEN6 	-- *RB* WAR: SKG0 AFTERTHEN6, --
	TCB	MAVON,
	HBA	10,
	TBC	MABBIS,
AFTERTHEN6=	ASP	0/B,
				-- DO I = MABBIS BY -1 TO MAVON ; --
	TCB	MABBIS,
	S	2R,
DO2=	VBA	1,
	TBC	I,
	VBC	MAVON,
	SXK	AFTERDO2,
				-- REGISTERA=OKTADE(I); REGISTERAQ=REGISTERAQ * 2**-4 --
	TCB	I,
	MAB	B2	0,
	SH	Z	4,
				-- END; --
	S	DO2,
AFTERDO2=	ASP	0/B,
				-- IF MAMINUS THEN REGISTERA=1 ELSE REGISTERA=0 ; --
				-- REGISTERAQ=REGISTERAQ * 2 ** -4; VERSORGW4=REGISTERQ; --
	SLN	3	1,
	BA	1,
	S	2R,
	BA	0,
	SH	Z	4,
	CQ	VERSORGW4,
				-- REGISTERAQ=0; --
	LR	3AQ,
				-- DO I = ENDPOS BY -1 TO EXVON; --
	TCB	ENDPOS,
	S	2R,
DO3=	VBA	1,
	TBC	I,
	VBC	EXVON,
	SXK	AFTERDO3,
				-- REGISTERA=OKTADE(I), REGISTERAQ=REGISTERAQ * 2 ** -4; --
	TCB	I,
	MAB	B2	0,
	SH	Z	4,
				-- END ; --
	S	DO3,
AFTERDO3=	ASP	0/B,
				-- REGISTERA=0 ; --
	LR	3A,
				-- REGISTERAQ=REGISTERAQ * 2 ** -(2-ENDPOS+EXVON)*4 ; --
	XBA	2,
	VBC	ENDPOS,
	HBC	EXVON,
	SXI	NACHSHIFT,
	SHB	L	2,
	HBA	'0800'		-- SH Z ... --
	MAB	SH	0,
NACHSHIFT=	ASP	0/B,
				-- IF EXMINUS THEN REGISTERA=1 ; ELSE REGISTERA=0 ; --
				-- REGISTERAQ=REGISTERAQ * 2 ** 4; VERSORGW5=REGISTERAQ ; --
	SLN	3	2,
	BA	1,
	S	2R,
	BA	0,
	SH	Z	4,
	CQ	VERSORGW5,
				-- CALL KONVERTIERUNG ; --
	BA	VERSORGBL,
	RT	AH,
	EXTERN	S&KDEG,
	BCI	INDEXB,
	SFB	S&KDEG,
	S	FEHLERD1,
				--END;--
	BCI	INDEXB,
	BCL	MERKL,
	MU	S	2,
FEHLERD1=	BCI	INDEXB,
	S	FEHLERD,

R&AOKT.=	SEGM			---KONVERTIEREN UND SCHREIBEN--
	EINGG	(R&AOKT),
	MU	TCB	0,
	SXKG	FEHLERA+1 	--ZU KLEINES ARGUMENT--
	VBA	6,
	SXG	FEHLERA+1 	--ZU GROSSES ARGUMENT --
	HBA	6,
	SHB	L	3,
	HBA	'3A00'		--LZKU--
	MAB	SH	0,
	TCB	R&APUFFERPOS 	--ANFANGSPOSITION RETTEN--
ANFPOS=	ASP	1,
	TBC	ANFPOS,
	MU	HBC	0	--ENDPOSITION+1 BILDEN,AUF GRENZE ACHTEN--
	VBA	R&APUFFER+120,
	SXKG	SCHLEIFE-2,
	XBA	R&APUFFER+120,
	TBC	R&APUFFERPOS,
	S	SCHLEIFE,
	HBA	R&APUFFER+120,
	TBC	R&APUFFERPOS,
SCHLEIFE=	VBA	1		--AKTUELLE POS BILDEN--
	VBC	ANFPOS,
	SXK	END,
	HBC	ANFPOS,
	LR	3A,
	SH	ZKU	8,
	SH	AKL	8,
	MAB	C2	0,
	S	SCHLEIFE,
END=	MU	S	1,

R&ATET.=	SEGM,
	EINGG	(R&ATET),
	MU	TCB	0,
	SXKG	FEHLERA+1 	--ZUKLEINES ARGUMENT--
	VBA	12,
	SXG	FEHLERA+1 	--ZUGROSSES ARGUMENT--
	RT	AQ,
	TCB	R&APUFFERPOS 	--ANFANGSPOSITION RETTEN--
ANFPOS=	ASP	1,
	TBC	ANFPOS,
	VBA	R&APUFFER+120,
	MU	HBC	0	--ENDPOSITION+1 BILDEN,AUF GRENZE ACHTEN--
	SXKG	SCHLEIFE-2,
	XBA	R&APUFFER+120,
	TBC	R&APUFFERPOS,
	S	SCHLEIFE,
	HBA	R&APUFFER+120,
	TBC	R&APUFFERPOS,
SCHLEIFE=	VBA	1		--AKTUELLE POS BILDEN--
	VBC	ANFPOS		--SOLANGE ANFPOS KLGL ENDPOS --
	SXK	END,
	HBC	ANFPOS,
	LR	3A,
	SH	ZKU	4,
	SH	AKL	4,
	ZTR	1A,
	SB	('000000000009'/1),
	SKG0	FALL0BIS9,
	A	('0000000000BF'/1),
OKTADEN=	ZTR	3A,
	MAB	C2	0,
	S	SCHLEIFE,
END=	MU	S	1,
FALL0BIS9=	A	('0000000000B9'/1),
	S	OKTADEN,

R&AGANZ.=	SEGM,
	EINGG	(R&AGANZ),
				-- R&AGANZ:PROC; DCL(ANFPOS,AUSGPOS,ENDPOS)FIXED BIN(7),MINUS BIT(1) --
				-- DCL FUEJRENDEBLANKS BIT(1); --
ANFPOS=	ASP	1,
AUSGPOS=	ASP	1,
ENDPOS=	ASP	1,
FUEHRENDEBLANKS=	ASP	1,
	ZTR	1A,
	BCL	MERKL,
				--IF PARAM>14 THEN GOTO FEHLERA; --
	MU	TCB	0,
	VBA	14,
	SXG	FEHLERA,
				--IF PARAM<2 THEN GOTO FEHLERA; --
	HBA	12,
	SXK	FEHLERA,
				--FUEHRENDEBLANKS=1; --
	XBA	1,
	TBC	FUEHRENDEBLANKS,
				-- IF REGISTERA < 0 THEN DO; MINUS='1'; REGISTERA=ABS(REGISTERA); END; --
				-- ELSE MINUS='0'B ; --
	LZL	0	1,
	SG0	5R,
	SK0	2R,
	SRN	3R,
	LZL	1	0,
	R	BB	A,
				-- IF REGISTERA >= 10**13 THENH GOTO FEHLERD2; --
	SB	(10000000000000/1),
	SGG0	FEHLERO2,
	A	(10000000000000/1),
				-- REGISTERAQ = KONVERTIERUNG(REGISTERA) --
	ZTR	1A,
	AA	1,
	ML	('384B84D092ED'/1) 	-- 2**43 --
	SH	ZL	3,
	KFLD	13,
	XBA	14		--FALLS PAR >= 14 --
	MU	VBC	0,
	SXI	GA1,
	VBA	1,
	SHB	L	1,
	HBA	'2A00'		--LZU--
	MAB	SH	0,
	SN0	FEHLERO2,
	XBA	13,
	MU	VBC	0,
	SHB	L	1,
	HBA	'2A00'		--LZU--
	MAB	SH	0,
	SN0	FEHLERO2,
	SH	LZU	4,
				-- IF R&APUFFERPOS <= ADR(R&APUFFER(119)) THENANFPOS=R&APUFFERPOS; ELSE GOTO END ; --
GA1=	TCB	R&APUFFERPOS,
	VBA	R&APUFFER+119,
	SXG	END,
	TCB	R&APUFFERPOS,
	TBC	ANFPOS,
				-- IF MINUS THEN OKTADE(ANFPOS) = '-'; ELSE OKTADE(ANFPOS)=' ' ; --
	RT	AH,
	SLN	3	1,
	B2	('000091'/H),
	S	+2R,
	B2	('0000AF'/H),
	MAB	C2	0,
	RT	AH,
				-- ANFPOS = ANFPOS + 1; --
	HBA	1,
	TBC	ANFPOS,
				-- IF ANFPOS+12 <= ADR(R&APUFFER(119))--
				-- THEN ENDPOS=ANFPOS+12; ELSE ENDPOS=ADR(R&APUFFER(119)); --
	MU	HBC	0,
	VBA	2,
	VBA	R&APUFFER+119,
	SXG	ELSE1,
	HBA	R&APUFFER+119,
	S	AFTERELSE1,
ELSE1=	XBA	R&APUFFER+119,
AFTERELSE1=	TBC	ENDPOS,
				-- DO AUSGPOS = ANFPOS TO ENDPOS; --
	TCB	ANFPOS,
	S	2R,
DO1=	HBA	1,
	TBC	AUSGPOS,
	VBC	ENDPOS,
	SXG	AFTERDO1,
				-- OKTADE(AUSGPOS)=REGISTERA: REGISTERA=0; REGISTERAQ=REGISTERAQ * 2 ** 4; --
	TCB	FUEHRENDEBLANKS,
	SXI	DO2,
	SN0	3R,
	AA	'00AF',
	S	4R,
	XBA	0,
	TBC	FUEHRENDEBLANKS,
DO2=	AA	'00B0',
	TCB	AUSGPOS,
	MAB	C2	0,
	LR	1A,
	SH	ZUL	4,
				-- END; --
	S	DO1,
AFTERDO1=	ASP	0/B,
				-- R&APUFFERPOS=ANDPOS+1; --
	TCB	FUEHRENDEBLANKS,
	SXI	END-3,
	TCB	ENDPOS,
	MAB	B2V	0,
	SBA	'00AF',
	SN0	END-2,
	AA	'00B0',
	MAB	C2	0,
	TCB	ENDPOS,
	HBA	1,
	TBC	R&APUFFERPOS,
				-- END:END; --
END=	BCL	MERKL,
	MU	S	1,

R&ABRUCH.=	SEGM,
	EINGG	(R&ABRUCH),
				-- R&ABRUCH:PROC; DCL ENDPOS FIXED BIN(7),MINUS BIT(1) DEF $MERKL(1) --
ENDPOS=	ASP	1,
	ZTR	1A,
	BCL	MERKL,
				-- IF REGISTERA < 0 THEN DO; MINUS='1'B; REGISTERA=ABS(REGISTERA);END; ELSE MINUS='0'B; --
	LZL	0	1,
	SG0	5R,
	SK0	2R,
	SRN	3R,
	LZL	1	0,
	R	BB	A,
				-- IF R&APUFFERPOS > ADR(R&APUFFER(119)) THEN GOTO END; --
	TCB	R&APUFFERPOS,
	VBA	R&APUFFER+119,
	SXG	END,
	HBA	R&APUFFER+119,
				-- IF MINUS THEN OKTADE(R&APUFFERPOS)='-' ; --
				--	ELSE OKTADE(R&APUFFERPOS=' '; --
	RT	AH,
	SLN	3	1,
	B2	('000091'/H),
	S	2R,
	B2	('0000AF'/H),
	MAB	C2	0	--RT AH,--
				-- R&APUFFERPOS = R&APUFFERPOS + 1 ; --
	HBA	1,
	TBC	R&APUFFERPOS,
				-- IF R&APUFFERPOS > ADR(R&APUFFER(119)) THEN GOTO END; --
	TCB	R&APUFFERPOS,
	VBA	R&APUFFER+119,
	SXG	END,
	HBA	R&APUFFER+119,
				-- OKTADE(R&APUFFERPOS)='.' --
				--RT AH,--
	B2	('0000A9'/H),
	MAB	C2	0,
	RT	AH,
				-- IF R&APUFFERPOS+13 <= ADR(R&APUFFER(119)) THEN ENDPOS=R&APUFFERPOS+13; --
				-- ELSE ENDPOS=ADR(R&APUFFER(119)); --
	HBA	13,
	VBA	R&APUFFER+119,
	SXG	ELSE1,
	HBA	R&APUFFER+119,
	S	AFTERELSE1,
ELSE1=	XBA	R&APUFFER+119,
AFTERELSE1=	TBC	ENDPOS,
				-- REGISTERAQ = KONVERTIERUNG(REGISTERA); --
	SN0	3R,
	LR	1AQ,
	S	2R,
	KFLD	13,
				-- DO R&APUFFERPOS=R&APUFFERPOS+1 TO ENDPOS; --
	TCB	R&APUFFERPOS,
	HBA	1,
	S	2R,
DO1=	HBA	1,
	TBC	R&APUFFERPOS,
	VBC	ENDPOS,
	SXG	AFTERDO1,
	TCB	R&APUFFERPOS,
				-- OKTADE(R&APUFFERPOS)=REGISTERA; REGISTERA=0; REGISTERAQ=REGISTERAQ * 2 ** 4; --
	AA	'00B0',
	MAB	C2	0,
	LR	1A,
	SH	ZUL	4,
				-- END; R&APUFFERPOS=R&APUFFERPOS+1; --
	S	DO1,
AFTERDO1=	ASP	0/B,
				-- END:END; --
END=	BCL	MERKL,
	MU	S	0,


R&AGLEIT.=	SEGM,
	EINGG	(R&AGLEIT),
				-- R&AGLEIT:PROC; DCL(KEGDQORT4,KEGDWORT5)(12)BIT(4); --
				--		ENDPOS FIXED BIN(7);	--
KEGDWORT4=	ASP	2/G,
KEGDWORT5=	ASP	2/G,
ENDPOS=	ASP	1,
	ZTR	0A,
	SAA	1R,
				-- IF R&APUFFERPOS > ADR(R&APUFFER(110)) --
				-- THEN R&APUFFERPOS = ADR(R&APUFFER(120)); --
	TCB	R&APUFFERPOS,
	VBA	R&APUFFER+119,
	SXKG	AFTERTHEN1,
	XBA	R&APUFFER+120,
	TBC	R&APUFFERPOS,
AFTERTHEN1=	ASP	0/B,
				-- IF TREGISTERA = 0 THEN DO; --
				-- KEGDWORT4,KEGDWORT5=0; GOTO LABEL; END; --
	SN0	AFTERTHEN2,
	LC	KEGDWORT4,
	LC	KEGDWORT5,
	LR	3AQ,
	S	LABEL,
AFTERTHEN2=	ASP	0/B,
				-- CALL KONVERTIERUNG(KEGDWORT4,KEGDWORT5); --
VERSORGBL=	ASP	12/G,
VERSORGBLADR=	0/HG2, VERSORGBL/AU,
	BH	VERSORGBLADR,
	EXTERN	S&KEGD,
	BCL	MERKL,
	BCI	INDEXB,
	SFB	S&KEGD,
	KB	0,
	BCI	INDEXB,
	BCL	MERKL,
	BZ	VERSORGBL+6,
	CZ	KEGDWORT4,
				-- LABEL: --
				-- REGISTERA=0; REGISTERQ=KEGDWORT4; REGISTERAQ=REGISTERAQ * 2 ** 4; --
LABEL=	R	BQ	A,
	LR	3A,
	SH	ZUL	4,
				-- IF REGISTERA=0 THEN OKTADE(R&APUFFERPOS)=' ' ;--
				--		ELSE OKTADE(R&APUFFERPOS)='-' ; --
	SN0	ELSE3,
	XBA	'' '',
	S	AFTERELSE3,
ELSE3=	XBA	''-'',
AFTERELSE3=	MCFU	R&APUFFERPOS,
	TBC	0,
				-- R&APUFFERPOS=R&APUFFERPOS+1; OKTADE(R&APUFFERPOS)='.' ; --
	TCB	R&APUFFERPOS,
	HBA	1,
	TBC	R&APUFFERPOS,
	XBA	''.'',
	MCFU	R&APUFFERPOS,
	TBC	0,
				-- ENDPOS=R&APUFFERPOS+11; DO R&APUFFERPOS=R&APUFFERPOS+1 TO ENDPOS ; --
	TCB	R&APUFFERPOS,
	HBA	11,
	TBC	ENDPOS,
	VBA	10,
	S	2R,
DO2=	HBA	1,
	TBC	R&APUFFERPOS,
	VBC	ENDPOS,
	SXG	AFTERDO2,
	TCB	R&APUFFERPOS,
				-- REGISTERA=0; REGISTERAQ=REGISTERAQ * 2 ** 4 ; --
				-- OKTADE(R&APUFFERPOS)=REGISTERA; --
	LR	3A,
	SH	ZUL	4,
	AA	'00B0',
	MAB	C2	0,
				-- END; --
	S	DO2,
AFTERDO2=	ASP	0/B,
				-- REGISTERQ=KEGDWORT5; REGISTERA=REGISTERA * 2 ** 8; REGISTERA=0; --
	BQ	KEGDWORT5,
	LR	3A,
	SH	ZUL	4,
	TCB	R&APUFFERPOS,
	AA	'00B0',
	MAB	C2	0,
	HBA	1,
	TBC	R&APUFFERPOS,
	SH	ZUL	4,
	LR	3A,
				-- OKTADE(R&APUFFERPOS)='E'; --
	XBA	''E'',
	MCFU	R&APUFFERPOS,
	TBC	0,
				-- REGISTERAQ=REGISTERAQ * 2 ** 4; R&APUFFERPOS=R&APUFFERPOS+1; --
	SH	ZUL	4,
	TCB	R&APUFFERPOS,
	HBA	1,
	TBC	R&APUFFERPOS,
				-- IF REGISTERA=0 THEN OKTADE(R&APUFFERPOS)=' ' ; --
				--		ELSE OKTADE(R&APUFFERPOS)='-' ; --
	SN0	ELSE4,
	XBA	'' '',
	S	AFTERELSE4,
ELSE4=	XBA	''-'',
AFTERELSE4=	MCFU	R&APUFFERPOS,
	TBC	0,
				-- OKTADE(R&APUFFERPOS+1)=KEGDWORT5(4); --
	TCB	R&APUFFERPOS,
	LR	3A,
	SH	ZUL	4,
	AA	'00B0',
	MAB	C2	1,
	LR	3A,
	SH	ZUL	4,
	AA	'00B0',
	MAB	C2	1,
	LR	3A,
	SH	ZUL	4,
	AA	'00B0',
	MAB	C2	1,
				-- R&APUFFERPOS=R&APUFFERPOS+4; --
	TCB	R&APUFFERPOS,
	HBA	4,
	TBC	R&APUFFERPOS,
				-- END; --
	MU	S	0,

R&DRUCKETEXT.=	SEGM,
	EINGG	(R&DRUCKETEXT),
	SFB	R&APUFFERINI,
ZAEHLER=	ASP	1,
	XBA	0,
	S	3R,
DO=	TCB	ZAEHLER,
	HBA	2,
	TBC	ZAEHLER,
	VBA	115,
	SXG	AFTERDO,
	HBA	115,
	MU	HBC	0,
	MAB	BU	0,
	ST	5	2A,
	TCB	ZAEHLER,
	HBA	R&APUFFER,
	MAB	CU	0,
	S	DO,
AFTERDO=	MU	S	1,

	EINGG	(R&SCHLUSS),
R&SCHLUSS=	NULL	0		--BEZUGSPUNKT FUER UEBERWACHER--

	ENDE,


